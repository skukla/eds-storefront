{"version":3,"file":"Cart.js","sources":["../../src/components/Cart/Cart.tsx","../../src/hooks/useEstimatedShipping.ts","../../src/containers/Cart/Cart.tsx"],"sourcesContent":["import { FunctionComponent, VNode } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { VComponent, classes } from '@adobe/elsie/lib';\nimport { Divider } from '@adobe/elsie/components';\n\nimport '@/cart/components/Cart/Cart.css';\n\nexport interface CartProps extends HTMLAttributes<HTMLDivElement> {\n  emptyCart: VNode;\n  heading?: VNode;\n  products?: VNode;\n  priceSummary?: VNode<HTMLAttributes<HTMLElement>>;\n}\n\nexport const Cart: FunctionComponent<CartProps> = ({\n  className,\n  children,\n  emptyCart,\n  heading,\n  products,\n  priceSummary,\n  ...props\n}) => {\n  return (\n    <div {...props} className={classes(['cart-cart', className])}>\n      <div className={classes(['cart-cart__wrapper'])}>\n        {/* Heading */}\n        {heading && (\n          <div\n            className={classes([\n              'cart-cart__heading',\n              ['cart-cart__heading--full-width', !products || !priceSummary],\n            ])}\n          >\n            <VComponent node={heading} className=\"cart-cart__heading-text\" />\n\n            <Divider\n              variant=\"primary\"\n              className={classes(['cart-cart__heading-divider'])}\n            />\n          </div>\n        )}\n\n        {/* Content */}\n        <div\n          className={classes([\n            'cart-cart__content',\n            ['cart-cart__content--empty', !products],\n            ['cart-cart__content--full-width', !priceSummary],\n          ])}\n        >\n          {products || (\n            <VComponent node={emptyCart} className=\"cart-cart__empty-cart\" />\n          )}\n        </div>\n        {products && priceSummary && (\n          <VComponent\n            node={priceSummary}\n            className={classes(['cart-cart__price-summary'])}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useCallback, useEffect, useState } from 'preact/compat';\n\nimport {\n  EstimateAddressInput,\n  getCountries,\n  getEstimateShipping,\n  getRegions,\n} from '@/cart/api';\nimport { PriceProps } from '@adobe/elsie/components';\n\nexport const useEstimatedShipping = () => {\n  /* State data related to estimating costs in the Price Summary component */\n  const [countries, setCountries] = useState<{ text: string; value: string }[]>(\n    []\n  );\n  const [selectedCountry, setSelectedCountry] = useState<string>('US');\n  const [selectedRegion, setSelectedRegion] = useState<string>('');\n  const [selectedZip, setSelectedZip] = useState<string>('');\n  const [regions, setRegions] = useState<{ text: string; value: string }[]>([]);\n  const [regionsLoading, setRegionsLoading] = useState<boolean>(false);\n  const [estimatedShippingPrice, setEstimatedShippingPrice] =\n    useState<PriceProps | null>();\n  const [estimatedDestinationText, setEstimatedDestinationText] =\n    useState<string>('');\n  const [priceSummaryLoading, setPriceSummaryLoading] =\n    useState<boolean>(false);\n\n  const handleEstimateShipping = useCallback(\n      (formValues: {\n        shippingCountry: string;\n        shippingState?: string;\n        shippingZip?: string;\n      }) => {\n        const {\n          shippingCountry,\n          shippingState = '',\n          shippingZip = '',\n        } = formValues;\n\n        const addressData: EstimateAddressInput = {\n          countryCode: shippingCountry,\n          postcode: shippingZip,\n          region: {\n            code: shippingState,\n          },\n        };\n\n        setPriceSummaryLoading(true);\n\n        getEstimateShipping(addressData)\n          .then((data) => {\n            if (data) {\n              setEstimatedShippingPrice({\n                amount: data.amount.value,\n                currency: data.amount.currency,\n              });\n\n              setSelectedCountry(shippingCountry);\n              setSelectedRegion(shippingState);\n              setSelectedZip(shippingZip);\n\n              setEstimatedDestinationText(\n                shippingState || shippingZip || shippingCountry\n              );\n            }\n          })\n          .finally(() => {\n            setPriceSummaryLoading(false);\n          });\n      },\n    []\n  );\n\n  const handleCountrySelected = (event: Event) => {\n    event.preventDefault();\n\n    setSelectedRegion('');\n    setSelectedZip('');\n\n    const value = (event.target as HTMLSelectElement).value;\n    setSelectedCountry(value);\n  };\n\n  // Get list of countries on initial load\n  useEffect(() => {\n    getCountries().then((countries) => {\n      let defaultCountry = 'US';\n      const transformedCountries = countries.map((country) => {\n        if (country.isDefaultCountry) {\n          defaultCountry = country.id;\n        }\n        return {\n          text: country.label,\n          value: country.id,\n        };\n      });\n      setCountries(transformedCountries);\n      setSelectedCountry(defaultCountry);\n    });\n  }, []);\n\n  // Update regions when country is updated\n  useEffect(() => {\n    setRegionsLoading(true);\n    getRegions(selectedCountry)\n      .then((regions) => {\n        const transformedRegions = regions.map((region) => {\n          return {\n            text: region.name,\n            value: region.code,\n          };\n        });\n        setRegions(transformedRegions);\n      })\n      .finally(() => {\n        setRegionsLoading(false);\n      });\n  }, [selectedCountry, setRegionsLoading]);\n\n  return {\n    loading: priceSummaryLoading,\n    regionsLoading,\n    estimatedDestinationText,\n    countries,\n    selectedCountry,\n    selectedRegion,\n    selectedZip,\n    regions,\n    estimatedShippingPrice,\n    handleEstimateShipping,\n    handleCountrySelected,\n  };\n};\n","import { HTMLAttributes, useEffect, useState } from 'preact/compat';\nimport { Container } from '@adobe/elsie/lib';\nimport { events } from '@adobe/event-bus';\nimport { CartModel } from '@/cart/data/models';\nimport {\n  Button,\n  CartItem,\n  CartList,\n  Input,\n  Image,\n  Picker,\n  Price,\n  PriceSummary,\n} from '@adobe/elsie/components';\nimport { Cart as CartComponent, EmptyCart } from '@/cart/components';\nimport { updateProductsFromCart } from '@/cart/api';\nimport { useText } from '@adobe/elsie/i18n';\nimport { getPersistedData } from '@/cart/lib/persisted-data';\n\nimport { publishShoppingCartViewEvent } from '@/cart/lib/acdl';\nimport { state } from '@/cart/lib/state';\nimport { useEstimatedShipping } from '@/cart/hooks';\n\ninterface CheckoutRouteContext {\n  cartId: string;\n}\nexport interface CartProps extends HTMLAttributes<HTMLDivElement> {\n  // Links\n  routeProduct?: (item: CartModel['items'][0]) => string;\n  routeEmptyCartCTA?: () => string;\n  routeCheckout?: (context: CheckoutRouteContext) => string;\n}\n\nexport const Cart: Container<CartProps, CartModel | null> = ({\n  children,\n  initialData = null,\n  routeProduct,\n  routeEmptyCartCTA,\n  routeCheckout,\n  ...props\n}) => {\n  const [data, setData] = useState<CartModel | null>(initialData);\n  const [itemsLoading, setItemLoading] = useState<Set<string>>(new Set());\n\n  const {\n    loading: priceSummaryLoading,\n    regionsLoading,\n    countries,\n    regions,\n    selectedCountry,\n    selectedRegion,\n    selectedZip,\n    estimatedDestinationText,\n    estimatedShippingPrice,\n    handleCountrySelected,\n    handleEstimateShipping,\n  } = useEstimatedShipping();\n\n  const handleItemsLoading = (state: boolean, uid: string) => {\n    setItemLoading((prev) => {\n      state ? prev.add(uid) : prev.delete(uid);\n      return new Set(prev);\n    });\n  };\n\n  const handleItemQuantityUpdate = (uid: string, quantity: number) => {\n    handleItemsLoading(true, uid);\n\n    updateProductsFromCart([{ uid, quantity }]).finally(() => {\n      handleItemsLoading(false, uid);\n    });\n  };\n\n  const dictionary = useText({\n    applyButton: 'Cart.PriceSummary.estimatedShippingForm.apply.label',\n    checkout: 'Cart.PriceSummary.checkout',\n    countryField: 'Cart.PriceSummary.estimatedShippingForm.country.placeholder',\n    discountedPrice: 'Cart.CartItem.discountedPrice',\n    download: 'Cart.CartItem.download',\n    freeShipping: 'Cart.PriceSummary.freeShipping',\n    heading: 'Cart.Cart.heading',\n    message: 'Cart.CartItem.message',\n    regularPrice: 'Cart.CartItem.regularPrice',\n    recipient: 'Cart.CartItem.recipient',\n    sender: 'Cart.CartItem.sender',\n    stateField: 'Cart.PriceSummary.estimatedShippingForm.state.placeholder',\n    taxToBeDetermined: 'Cart.PriceSummary.taxToBeDetermined',\n    zipField: 'Cart.PriceSummary.estimatedShippingForm.zip.placeholder',\n    file: 'Cart.CartItem.file',\n    files: 'Cart.CartItem.files',\n  });\n\n  // Subscribe to cart data events\n  useEffect(() => {\n    const event = events.on(\n      'cart/data',\n      (payload) => {\n        setData(payload as CartModel);\n\n        const shippingAddress = payload?.addresses?.shipping?.[0];\n\n        if (shippingAddress) {\n          const { countryCode, regionCode, zipCode } = shippingAddress;\n          handleEstimateShipping({\n            shippingCountry: countryCode,\n            shippingState: regionCode,\n            shippingZip: zipCode,\n          });\n        }\n      },\n      { eager: true }\n    );\n\n    return () => {\n      event?.off();\n    };\n  }, [handleEstimateShipping]);\n\n  // Publish shopping cart view event only once when the component is mounted and initialData is available\n  useEffect(() => {\n    if (initialData && Object.keys(initialData).length > 0) {\n      publishShoppingCartViewEvent(initialData, state.locale || 'en-US');\n    }\n  }, [initialData]);\n\n  const priceSummary =\n    data?.totalQuantity ?? 0 ? (\n      <PriceSummary\n        data-testid=\"price-summary\"\n        loading={priceSummaryLoading}\n        heading=\"Order Summary\"\n        total={{\n          price: (\n            <Price amount={data?.total.value} currency={data?.total.currency} />\n          ),\n          estimated: true,\n        }}\n        subTotal={{\n          price: (\n            <Price\n              data-testid=\"subtotal\"\n              amount={data?.subtotal.excludingTax?.value}\n              currency={data?.subtotal.excludingTax?.currency}\n            />\n          ),\n        }}\n        shipping={\n          data?.isVirtual\n            ? undefined\n            : {\n                price:\n                  estimatedShippingPrice?.amount == 0 ? (\n                    <span data-testId=\"free-shipping\">\n                      {dictionary.freeShipping}\n                    </span>\n                  ) : estimatedShippingPrice ? (\n                    <Price {...estimatedShippingPrice} />\n                  ) : (\n                    <span>{dictionary.taxToBeDetermined}</span>\n                  ),\n                estimated: true,\n                countryField: (\n                  <Picker\n                    name=\"shippingCountry\"\n                    placeholder={dictionary.countryField}\n                    value={selectedCountry}\n                    variant=\"primary\"\n                    options={countries}\n                    handleSelect={handleCountrySelected}\n                    data-testid=\"estimate-shipping-country-selector\"\n                  />\n                ),\n                stateField:\n                  regions.length > 0 ? (\n                    <Picker\n                      name=\"shippingState\"\n                      placeholder={dictionary.stateField}\n                      variant=\"primary\"\n                      options={regions}\n                      value={selectedRegion}\n                      data-testid=\"estimate-shipping-state-selector\"\n                      disabled={regionsLoading}\n                    />\n                  ) : (\n                    <Input\n                      aria-label={dictionary.stateField}\n                      name=\"shippingState\"\n                      placeholder={dictionary.stateField}\n                      variant=\"primary\"\n                      value={selectedRegion}\n                      disabled={regionsLoading}\n                      data-testid=\"estimate-shipping-state-input\"\n                      maxLength={50}\n                    />\n                  ),\n                zipField: (\n                  <Input\n                    aria-label={dictionary.zipField}\n                    name=\"shippingZip\"\n                    placeholder={dictionary.zipField}\n                    variant=\"primary\"\n                    data-testid=\"estimate-shipping-zip-input\"\n                    value={selectedZip}\n                    maxLength={12}\n                  />\n                ),\n                estimateButton: (\n                  <Button\n                    variant=\"secondary\"\n                    data-testid=\"estimate-shipping-apply-button\"\n                    aria-label={dictionary.applyButton}\n                  >\n                    {dictionary.applyButton}\n                  </Button>\n                ),\n                destinationText:\n                  estimatedDestinationText || dictionary.taxToBeDetermined,\n                onEstimate: handleEstimateShipping,\n              }\n        }\n        taxTotal={{\n          price: data?.totalTax ? (\n            <Price\n              data-testid=\"tax-total\"\n              amount={data?.totalTax?.value}\n              currency={data?.totalTax?.currency}\n            />\n          ) : (\n            <span data-testid=\"tax-total\">{dictionary.taxToBeDetermined}</span>\n          ),\n          estimated: true,\n        }}\n        primaryAction={\n          routeCheckout ? (\n            <Button\n              data-testid=\"checkout-button\"\n              variant=\"primary\"\n              href={routeCheckout({\n                cartId: data!.id,\n              })}\n            >\n              {dictionary.checkout}\n            </Button>\n          ) : undefined\n        }\n        discounts={data?.appliedDiscounts.map((discount) => {\n          return {\n            label: discount.label,\n            price: (\n              <Price\n                data-testid=\"summary-discount-total\"\n                amount={-discount.amount.value}\n                currency={discount.amount.currency}\n                sale={true}\n              />\n            ),\n          };\n        })}\n      />\n    ) : undefined;\n\n  return (\n    <CartComponent\n      {...props}\n      heading={<div>{dictionary.heading}</div>}\n      emptyCart={<EmptyCart ctaLinkURL={routeEmptyCartCTA?.()} />}\n      priceSummary={priceSummary}\n      products={\n        data?.totalQuantity ?? 0 ? (\n          <CartList>\n            {data?.items.map((item, index) => {\n              const isLoading = itemsLoading.has(item.uid);\n\n              const configurations = {\n                ...(item.selectedOptions ?? {}),\n                ...(item.recipient\n                  ? { [dictionary.recipient]: item.recipient }\n                  : {}),\n                ...(item.recipientEmail && item.recipient\n                  ? {\n                      [dictionary.recipient]: `${item.recipient} (${item.recipientEmail})`,\n                    }\n                  : {}),\n                ...(item.sender ? { [dictionary.sender]: item.sender } : {}),\n                ...(item.senderEmail && item.sender\n                  ? {\n                      [dictionary.sender]: `${item.sender} (${item.senderEmail})`,\n                    }\n                  : {}),\n                ...(item.message ? { [dictionary.message]: item.message } : {}),\n                ...(item.links && item.links.count\n                  ? item.links.count > 1\n                    ? {\n                        [dictionary.files.replace(\n                          '{count}',\n                          item.links.count.toString()\n                        )]: item.links.result,\n                      }\n                    : {\n                        [dictionary.file.replace(\n                          '{count}',\n                          item.links.count.toString()\n                        )]: item.links.result,\n                      }\n                  : {}),\n              };\n\n              return (\n                <CartItem\n                  data-testid=\"cart-item\"\n                  ariaLabel={item.name}\n                  key={item.uid}\n                  updating={isLoading}\n                  image={\n                    routeProduct ? (\n                      <a href={routeProduct(item)}>\n                        <Image\n                          loading={index < 4 ? 'eager' : 'lazy'}\n                          src={item.image.src}\n                          alt={item.image.alt}\n                          width=\"300\"\n                          height=\"300\"\n                          params={{ width: 300 }}\n                        />\n                      </a>\n                    ) : (\n                      <Image\n                        loading={index < 4 ? 'eager' : 'lazy'}\n                        src={item.image.src}\n                        alt={item.image.alt}\n                        width=\"300\"\n                        height=\"300\"\n                        params={{ width: 300 }}\n                      />\n                    )\n                  }\n                  title={\n                    <span>\n                      {routeProduct ? (\n                        <a href={routeProduct(item)}>{item.name}</a>\n                      ) : (\n                        <>{item.name}</>\n                      )}\n                    </span>\n                  }\n                  sku={<span>{item.sku}</span>}\n                  configurations={\n                    Object.keys(configurations).length > 0\n                      ? configurations\n                      : undefined\n                  }\n                  quantity={item.quantity}\n                  price={\n                    <Price\n                      amount={item.regularPrice?.value}\n                      currency={item.regularPrice?.currency}\n                      style={{ font: 'inherit' }}\n                    />\n                  }\n                  total={\n                    <>\n                      <Price\n                        amount={item.total.value}\n                        currency={item.total.currency}\n                        variant={item.discounted ? 'strikethrough' : 'default'}\n                        data-testid=\"regular-total\"\n                        aria-label={dictionary.regularPrice}\n                      />\n\n                      {item.discounted && (\n                        <Price\n                          amount={item.discountedTotal?.value}\n                          currency={item.discountedTotal?.currency}\n                          sale={item.discounted}\n                          data-testid=\"discount-total\"\n                          aria-label={dictionary.discountedPrice}\n                        />\n                      )}\n                    </>\n                  }\n                  onQuantity={(value) => {\n                    handleItemQuantityUpdate(item.uid, value);\n                  }}\n                  onRemove={() => {\n                    handleItemQuantityUpdate(item.uid, 0);\n                  }}\n                />\n              );\n            })}\n          </CartList>\n        ) : undefined\n      }\n    />\n  );\n};\n\nCart.getInitialData = async function () {\n  return getPersistedData();\n};\n"],"names":["Cart","className","children","emptyCart","heading","products","priceSummary","props","_jsx","classes","_jsxs","VComponent","node","Divider","variant","useEstimatedShipping","countries","setCountries","useState","selectedCountry","setSelectedCountry","selectedRegion","setSelectedRegion","selectedZip","setSelectedZip","regions","setRegions","regionsLoading","setRegionsLoading","estimatedShippingPrice","setEstimatedShippingPrice","estimatedDestinationText","setEstimatedDestinationText","priceSummaryLoading","setPriceSummaryLoading","handleEstimateShipping","useCallback","formValues","shippingCountry","shippingState","shippingZip","addressData","countryCode","postcode","region","code","then","data","amount","value","currency","finally","handleCountrySelected","event","preventDefault","target","useEffect","getCountries","defaultCountry","transformedCountries","map","country","isDefaultCountry","id","text","label","getRegions","transformedRegions","name","loading","initialData","routeProduct","routeEmptyCartCTA","routeCheckout","setData","itemsLoading","setItemLoading","Set","handleItemsLoading","state","uid","prev","add","delete","handleItemQuantityUpdate","quantity","updateProductsFromCart","dictionary","useText","applyButton","checkout","countryField","discountedPrice","download","freeShipping","message","regularPrice","recipient","sender","stateField","taxToBeDetermined","zipField","file","files","events","on","payload","shippingAddress","addresses","shipping","regionCode","zipCode","eager","off","Object","keys","length","locale","totalQuantity","PriceSummary","total","price","Price","estimated","subTotal","subtotal","excludingTax","isVirtual","undefined","Picker","placeholder","options","handleSelect","disabled","Input","maxLength","estimateButton","Button","destinationText","onEstimate","taxTotal","totalTax","primaryAction","href","cartId","discounts","appliedDiscounts","discount","sale","CartComponent","EmptyCart","ctaLinkURL","CartList","items","item","index","isLoading","has","configurations","selectedOptions","recipientEmail","senderEmail","links","count","replace","toString","result","CartItem","ariaLabel","updating","image","Image","src","alt","width","height","params","title","_Fragment","sku","style","font","discounted","discountedTotal","onQuantity","onRemove","getInitialData","getPersistedData"],"mappings":"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"}