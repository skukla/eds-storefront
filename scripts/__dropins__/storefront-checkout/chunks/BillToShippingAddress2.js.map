{"version":3,"file":"BillToShippingAddress2.js","sources":["../../src/components/BillToShippingAddress/BillToShippingAddress.tsx","../../src/components/BillToShippingAddress/BillToShippingAddressSkeleton.tsx","../../src/containers/BillToShippingAddress/constants.ts","../../src/containers/BillToShippingAddress/BillToShippingAddress.tsx"],"sourcesContent":["import { FunctionComponent } from 'preact';\nimport { classes } from '@adobe/elsie/lib';\nimport { Checkbox, CheckboxProps } from '@adobe/elsie/components';\nimport { BillToShippingAddressSkeleton } from '@/checkout/components/BillToShippingAddress';\nimport '@/checkout/components/BillToShippingAddress/BillToShippingAddress.css';\nimport { useText } from '@adobe/elsie/i18n';\n\nexport interface BillToShippingAddressProps\n  extends Omit<CheckboxProps, 'name' | 'label'> {\n  isInitialized?: boolean;\n}\n\nexport const BillToShippingAddress: FunctionComponent<\n  BillToShippingAddressProps\n> = ({ className, isInitialized = true, checked = true, ...props }) => {\n  const translations = useText({\n    title: 'Checkout.BillToShippingAddress.title',\n  });\n\n  if (!isInitialized) return <BillToShippingAddressSkeleton />;\n\n  return (\n    <div className={classes(['checkout-bill-to-shipping-address', className])}>\n      <Checkbox\n        data-testid=\"bill-to-shipping-checkbox\"\n        className=\"checkout-bill-to-shipping-address__checkbox\"\n        checked={checked}\n        name=\"checkout-bill-to-shipping-address__checkbox\"\n        label={translations.title}\n        {...props}\n      />\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const BillToShippingAddressSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton className=\"bill-to-shipping-address__skeleton\">\n      <SkeletonRow variant=\"row\" size=\"small\" />\n    </Skeleton>\n  );\n};\n","export const BILL_TO_SHIPPING_KEY = 'is_bill_to_shipping_address';\n","import { setBillingAddress } from '@/checkout/api';\nimport { BillToShippingAddress as BillToShippingAddressComponent } from '@/checkout/components/BillToShippingAddress';\nimport {\n  IsBillToShipping,\n  cartSignal,\n  isBillToShippingSignal,\n} from '@/checkout/signals';\nimport { Container } from '@adobe/elsie/lib';\nimport { Signal } from '@preact/signals-core';\nimport { useEffect, useState } from 'preact/compat';\nimport { BILL_TO_SHIPPING_KEY } from './constants';\nimport { useAddressFormFields } from '@/checkout/context/address-form-fields';\nimport { CheckboxProps } from '@adobe/elsie/components';\nimport {\n  ShippingAddress,\n  BillingAddress,\n} from '@/checkout/data/models/address';\nimport { AddressFormField } from '@/checkout/data/models/address-form-fields';\n\ntype Address = BillingAddress | ShippingAddress[];\n\nfunction compareFields(first: Address, second: Address, field: keyof Address) {\n  const firstValue = first[field];\n  const secondValue = second[field];\n\n  if (firstValue === undefined && secondValue === undefined) return true;\n  if (firstValue === null && secondValue === null) return true;\n\n  if (typeof firstValue === 'object' && typeof secondValue === 'object') {\n    return JSON.stringify(firstValue) === JSON.stringify(secondValue);\n  }\n\n  return firstValue === secondValue;\n}\n\nexport function compareAddresses(\n  addressFormFields: AddressFormField[],\n  first: BillingAddress | undefined,\n  second: ShippingAddress | undefined\n) {\n  if (!first && !second) return true;\n  if (!first || !second) return false;\n\n  return addressFormFields.every((field) => {\n    const fieldCode = field.code as keyof Address;\n    return compareFields(first, second, fieldCode);\n  });\n}\n\nconst useInitialState = ({\n  isBillToShipping,\n}: {\n  isBillToShipping: Signal<IsBillToShipping>;\n}) => {\n  const [isInitialized, setIsInitialized] = useState(false);\n  const { fields } = useAddressFormFields();\n  const cartData = cartSignal.value.data;\n  const hasCartData = !!cartData;\n  const billingAddress = cartData?.billingAddress;\n  const shippingAddress = cartData?.shippingAddresses?.[0];\n\n  useEffect(() => {\n    if (!fields) return;\n\n    const localIsBillToShipping = localStorage.getItem(BILL_TO_SHIPPING_KEY);\n\n    if (!isInitialized && localIsBillToShipping) {\n      setIsInitialized(true);\n      isBillToShipping.value = {\n        checked: localIsBillToShipping === 'true',\n        setByUser: false,\n      };\n      return;\n    }\n\n    if (!isInitialized && hasCartData) {\n      setIsInitialized(true);\n\n      const isSameShippingAndBilling = compareAddresses(\n        fields,\n        billingAddress,\n        shippingAddress\n      );\n\n      isBillToShipping.value = {\n        checked: cartData?.billingAddress\n          ? isSameShippingAndBilling\n          : isBillToShipping.value.checked,\n        setByUser: false,\n      };\n    }\n  }, [\n    billingAddress,\n    cartData?.billingAddress,\n    fields,\n    hasCartData,\n    isBillToShipping,\n    isInitialized,\n    shippingAddress,\n  ]);\n\n  return { isInitialized };\n};\n\nexport interface BillToShippingAddressProps\n  extends Omit<CheckboxProps, 'name' | 'label'> {}\n\nexport const BillToShippingAddress: Container<BillToShippingAddressProps> = ({\n  children,\n  ...props\n}) => {\n  const { data: cartData } = cartSignal.value;\n  const cartId = cartData?.id || '';\n  const isBillToShipping = isBillToShippingSignal.value.checked;\n\n  const { isInitialized } = useInitialState({\n    isBillToShipping: isBillToShippingSignal,\n  });\n\n  const onChangeHandler = (event: Event) => {\n    const checkbox = event.target as HTMLInputElement;\n    const isChecked = checkbox.checked;\n    const cartData = cartSignal.value.data;\n    const hasShippingAddress = Boolean(cartData?.shippingAddresses?.[0]);\n\n    isBillToShippingSignal.value = { checked: isChecked, setByUser: true };\n\n    localStorage.setItem(BILL_TO_SHIPPING_KEY, isChecked.toString());\n\n    if (isInitialized && isChecked && hasShippingAddress) {\n      const controller = new AbortController();\n\n      setBillingAddress({\n        signal: controller.signal,\n        cartId,\n        input: { same_as_shipping: true },\n      }).catch((error) => {\n        console.error(error);\n      });\n\n      return () => {\n        controller.abort();\n      };\n    }\n  };\n\n  return (\n    <BillToShippingAddressComponent\n      {...props}\n      checked={isBillToShipping}\n      isInitialized={isInitialized}\n      onChange={onChangeHandler}\n      disabled={cartSignal.value.pending}\n    />\n  );\n};\n"],"names":["BillToShippingAddress","className","isInitialized","checked","props","translations","useText","title","_jsx","classes","children","Checkbox","name","label","BillToShippingAddressSkeleton","Skeleton","SkeletonRow","variant","size","BILL_TO_SHIPPING_KEY","compareFields","first","second","field","firstValue","secondValue","undefined","JSON","stringify","compareAddresses","addressFormFields","every","fieldCode","code","useInitialState","isBillToShipping","setIsInitialized","useState","fields","useAddressFormFields","cartData","cartSignal","value","data","hasCartData","billingAddress","shippingAddress","shippingAddresses","useEffect","localIsBillToShipping","localStorage","getItem","setByUser","isSameShippingAndBilling","cartId","id","isBillToShippingSignal","BillToShippingAddressComponent","onChange","event","isChecked","target","hasShippingAddress","Boolean","setItem","toString","controller","AbortController","setBillingAddress","signal","input","same_as_shipping","catch","error","console","abort","disabled","pending"],"mappings":"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"}